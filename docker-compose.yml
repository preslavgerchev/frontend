version: "3.7"
services:
  frontend:
    image: ${WEB_DEPLOY_IMAGE}:${DEPLOY_TAG?}
    container_name: ${COMPOSE_PROJECT_NAME?}-frontend
    restart: always
    environment:
      APP_ENV: ${APP_ENV?}
      API_URL: ${API_URL?}
      APP_URL: ${APP_URL?}
      DEPLOY_TAG: ${DEPLOY_TAG?}
      JWT_SECRET: ${JWT_SECRET?}
      NEXTAUTH_URL: ${NEXTAUTH_URL?}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID?}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET?}
      # Supabase
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL?}
      NEXT_PUBLIC_SUPABASE_KEY: ${NEXT_PUBLIC_SUPABASE_KEY?}
      # Sentry
      SENTRY_ORG: ${SENTRY_ORG?}
      SENTRY_DSN: ${SENTRY_DSN?}
      SENTRY_RELEASE: ${DEPLOY_TAG?}
      SENTRY_ENVIRONMENT: ${APP_ENV?}
      SENTRY_PROJECT: ${SENTRY_PROJECT?}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
      NEXT_PUBLIC_SENTRY_DSN: ${SENTRY_DSN?}
    depends_on:
      - api
    healthcheck:
      test: curl --fail http://localhost:3040/api/healthcheck || exit 1
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      frontend-net:
        aliases:
          - podkrepi.localhost

  api:
    image: ${API_DEPLOY_IMAGE}:${DEPLOY_TAG?}
    container_name: ${COMPOSE_PROJECT_NAME?}-api
    restart: always
    env_file: 
      - .env
    networks:
      backend-net:
        aliases:
          - api.podkrepi.localhost
      frontend-net:
        aliases:
          - api.podkrepi.localhost
    depends_on:
      - roach-init
      - flyway
    healthcheck:
      test: curl --fail http://localhost:5000/api/v1/healthcheck || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  campaigns:
    image: ${CAMPAIGN_DEPLOY_IMAGE}:${DEPLOY_TAG?}
    container_name: ${COMPOSE_PROJECT_NAME?}-campaigns
    restart: always
    environment:
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_PORT
      - DB_NAME
    networks:
      backend-net:
        aliases:
          - campaigns.podkrepi.localhost
      frontend-net:
        aliases:
          - campaigns.podkrepi.localhost

  roach-0:
    image: cockroachdb/cockroach:latest
    container_name: ${COMPOSE_PROJECT_NAME?}-roach-0
    restart: always
    hostname: roach-0
    command: start-single-node --insecure --listen-addr=roach-0:${DB_PORT} 
    # command: start-single-node --cluster-name=dp-crdb-cluster --logtostderr=WARNING --log-file-verbosity=WARNING --listen-addr=roach-0:26257 --advertise-addr=roach-0:26257 --certs-dir=/certs
    volumes:
      - roach-0-data:/cockroach/cockroach-data
    #   - certs-roach-0:/certs
    # depends_on:
    #   - roach-cert
    networks:
      - backend-net

  # roach-cert:
  #   container_name: roach-cert
  #   hostname: roach-cert
  #   build: db/cert
  #   volumes:
  #     - certs-roach-0:/certs/roach-0
  #     - certs-client:/certs/client

  roach-init:
    container_name: ${COMPOSE_PROJECT_NAME?}-roach-init
    hostname: roach-init
    # https://github.com/cockroachlabs-field/cockroachdb-remote-client
    image: timveil/cockroachdb-remote-client:latest
    environment:
      DATABASE_NAME: ${DB_NAME?}
      DATABASE_USER: ${DB_USER?}
      DATABASE_PASSWORD: ${DB_PASS?}
      COCKROACH_HOST: roach-0
      COCKROACH_PORT: ${DB_PORT?}
      COCKROACH_DATABASE: ${DB_NAME?}
      COCKROACH_INSECURE: "true"
      # COCKROACH_INSECURE: 'false'
      # COCKROACH_CERTS_DIR: /certs
    # volumes:
    #   - certs-client:/certs
    networks:
      - backend-net
    depends_on:
      - roach-0

  flyway:
    image: ${FLYWAY_DEPLOY_IMAGE}:${DEPLOY_TAG?}
    container_name: ${COMPOSE_PROJECT_NAME?}-flyway
    hostname: flyway
    # https://flywaydb.org/documentation/configuration/configfile#reference
    # jdbc:postgresql://<host>:<port>/<database>?<key1>=<value1>&<key2>=<value2>...
    command: migrate
    entrypoint: flyway -url=jdbc:postgresql://${DB_HOST?}:${DB_PORT?}/${DB_NAME?} -schemas=app,campaign,account -user=${DB_USER?} -password=${DB_PASS?} -connectRetries=60
    depends_on:
      - roach-init
    # volumes:
    #   - cert-client
    #   - certs-roach-0
    networks:
      - backend-net

volumes:
  roach-0-data:

networks:
  frontend-net:
  backend-net:
